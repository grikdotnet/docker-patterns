version: "3.7"

services:
  router:
    image: nginx:alpine
    deploy:
      replicas: 1
      restart_policy:
        condition: any
        max_attempts: 30
        delay: 2s
        window: 10s
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - fpm-socket:/fpm-socket/
      - ./nginx/30-installer.sh:/docker-entrypoint.d/30-installer.sh:ro
      - ./nginx/50-acmesh.sh:/docker-entrypoint.d/50-acmesh.sh:ro
      - certificates:/etc/certificates:rw
      - ./nginx/healthcheck.sh:/healthcheck.sh
    environment:
      CERTIFICATE_DOMAIN_NAMES: "example.com www.example.com"
    healthcheck:
      test: /bin/sh /healthcheck.sh
      interval: 2s
      timeout: 5s
      retries: 5
      start_period: 10s
    networks:
      hostnet: {}

  application:
    image: grigori/phpextensions:7.3-fpm
    volumes:
      - ./htdocs/:/htdocs/:ro
      - fpm-socket:/fpm-socket/
      - ./php/php.ini:/usr/local/etc/php/php.ini:ro
      - ./php/fpm.conf:/usr/local/etc/php-fpm.conf:ro
    deploy:
      replicas: 1
      restart_policy:
        condition: any
        max_attempts: 20
        delay: 2s
        window: 10s
      update_config:
        parallelism: 1
        delay: 10s
        order: start-first
    environment:
      MYSQL_USER:
      MYSQL_PASSWORD:
      MYSQL_DATABASE:
    env_file: ./mysql/db.env
    networks:
      backend: {}

  database:
    image: mysql:5.7
    volumes:
      - ./mysql/my.cnf:/etc/mysql/my.cnf
      - db-data:/var/lib/mysql
      - ../forum.sql:/docker-entrypoint-initdb.d/forum.sql
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
        max_attempts: 20
        delay: 30s
        window: 120s
    environment:
      MYSQL_USER:
      MYSQL_PASSWORD:
      MYSQL_ROOT_PASSWORD:
      MYSQL_DATABASE: forum
    env_file: ./mysql/db.env
    healthcheck:
      test: mysql -uforum --password=$$MYSQL_PASSWORD -e "quit" 2>/dev/null
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      backend: {}

volumes:
  certificates:
  db-data:
  fpm-socket:

networks:
  hostnet:
    external: true
    name: host
  backend:
    driver: bridge
    internal: true
