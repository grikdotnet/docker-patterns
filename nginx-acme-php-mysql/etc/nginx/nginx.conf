
user  nginx;
worker_processes  1;

error_log  /dev/stdout debug;
pid        /var/run/nginx.pid;

events {
    worker_connections  1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '[$time_local] "$request" $status $body_bytes_sent "$http_x_forwarded_for" $remote_addr "$http_user_agent"';

    access_log  /dev/stderr  main;

    sendfile        on;
    tcp_nopush     on;

    keepalive_timeout  65;

    ssl_certificate_key     /etc/certificates/key;
    ssl_dhparam             /etc/certificates/dhparams.pem;
    #A fullchain certificate file
    ssl_certificate         /etc/certificates/certificate;

    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers 'ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA:ECDHE-RSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA:ECDHE-ECDSA-DES-CBC3-SHA:ECDHE-RSA-DES-CBC3-SHA:EDH-RSA-DES-CBC3-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:DES-CBC3-SHA:!DSS';
    ssl_prefer_server_ciphers on;
    ssl_stapling on;
    ssl_session_cache shared:SSL:50m;
    ssl_stapling_verify on;
    ssl_ecdh_curve secp384r1;

    resolver 127.0.0.11;

    gzip  on;
    gzip_types text/plain application/json text/css application/javascript application/x-javascript text/javascript text/xml application/xml application/rss+xml application/atom+xml application/rdf+xml;
    gzip_vary on;
    gzip_min_length 500;
    gzip_proxied any;


# Healthcheck from docker swarm
    server {
        listen 127.0.0.1:8088;
        location = /health-check {
            return 200 "Ok";
            gzip  off;
            access_log off;
        }
    }

# Catch-all config for both HTTP and HTTPS
    server {
        listen [::]:80 default ipv6only=off;
        listen [::]:443 ssl http2 default ipv6only=off;

        error_page   500 502 503 504  /50x.html;

        # Deny access to hidden files
        location ~* /\. {
            return 404;
            log_not_found off;
        }

        location = /favicon.ico {
            access_log  off;
            return 404;
            log_not_found off;
        }

        location /.well-known/ {
            alias /usr/share/nginx/html/well-known/
        }

        location / {
            include                 fastcgi_params;
            fastcgi_index           index.php;
            fastcgi_pass            unix:/fpm-socket/socket;
            fastcgi_split_path_info ^(.+\.php)(/.*)$;
            fastcgi_param           PATH_INFO $fastcgi_path_info;
            fastcgi_param           SCRIPT_FILENAME  /scripts$fastcgi_script_name;
        }

    }

}
